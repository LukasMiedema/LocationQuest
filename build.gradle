buildscript {
	ext.kotlin_version = '1.0.4'
	ext {
		kotlinVersion = '1.0.4'
		springBootVersion = '1.4.0.RELEASE'
		jooqVersion = '3.8.4'
		h2Version = '1.4.192'

		h2 = new Expando(
			driver: 'org.h2.Driver',
			url: 'jdbc:h2:./locationquest',
			user: 'sa',
			password: 'sa',
		)
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "nu.studer:gradle-jooq-plugin:1.0.5"
		classpath "com.h2database:h2:${h2Version}"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
	configurations.classpath {
		resolutionStrategy {
			forcedModules = [
					"org.jooq:jooq:${jooqVersion}",
					"org.jooq:jooq-meta:${jooqVersion}",
					"org.jooq:jooq-codegen:${jooqVersion}"
			]
		}
	}
}

plugins {
	id "org.flywaydb.flyway" version "4.0.3"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'base'
apply plugin: 'nu.studer.jooq'

jar {
	baseName = 'locationquest'
	version = '0.0.1-INDEV'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring dependencies
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.session:spring-session')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.springframework.boot:spring-boot-devtools")

	// Validation
	compile("org.hibernate:hibernate-validator")

	// Thymeleaf BS
	compile("net.sourceforge.nekohtml:nekohtml:1.9.21")

	// Language dependencies
	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")

	// Database dependencies
	runtime('com.h2database:h2')
	runtime('org.postgresql:postgresql')
	compile('org.flywaydb:flyway-core:4.0.3')
	compile('javax.persistence:persistence-api:1.0.2')

	// Test dependencies
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}


// Flyway generates database at compile-time for JOOQ
flyway {
	url = h2.url
	user = h2.user
	password = h2.password
}

// Jooq generates entities
jooq {
	locationGame(sourceSets.main) {
		jdbc {
			driver = h2.driver
			url = h2.url
			user = h2.user
			password = h2.password
		}
		generator {
			name = 'org.jooq.util.DefaultGenerator'
			strategy {
				name = 'org.jooq.util.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.util.h2.H2Database'
				inputSchema = 'LOCATION_GAME'
			}
			generate {
				relations = true
				deprecated = false
				generatedAnnotation = true
				records = true
				pojos = true
				immutablePojos = false
				interfaces = false
				daos = false
				jpaAnnotations = true
				validationAnnotations = true
				springAnnotations = false
				globalObjectReferences = true
				fluentSetters = true
			}
			target {
				packageName = 'nl.lukasmiedema.locationquest.entity'
				directory = 'target/generated-sources/jooq'
			}
		}
	}
}

generateLocationGameJooqSchemaSource.dependsOn flywayMigrate

// After completion, the h2 database is purged
task entityGenerationClean << {
	delete "locationquest.mv.db"
}

compileKotlin.dependsOn generateLocationGameJooqSchemaSource
generateLocationGameJooqSchemaSource.finalizedBy entityGenerationClean


sourceSets {
	main {
		java.srcDirs += 'src/main/kotlin'
		resources.srcDirs += 'target/generated-resources'
	}
}
