/**
 * This class is generated by jOOQ
 */
package nl.lukasmiedema.locationquest.entity.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import nl.lukasmiedema.locationquest.entity.Keys;
import nl.lukasmiedema.locationquest.entity.LocationGame;
import nl.lukasmiedema.locationquest.entity.tables.records.TeamPlayerRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamPlayer extends TableImpl<TeamPlayerRecord> {

    private static final long serialVersionUID = 2067843928;

    /**
     * The reference instance of <code>LOCATION_GAME.TEAM_PLAYER</code>
     */
    public static final TeamPlayer TEAM_PLAYER = new TeamPlayer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeamPlayerRecord> getRecordType() {
        return TeamPlayerRecord.class;
    }

    /**
     * The column <code>LOCATION_GAME.TEAM_PLAYER.PLAYER_SESSION_ID</code>.
     */
    public final TableField<TeamPlayerRecord, UUID> PLAYER_SESSION_ID = createField("PLAYER_SESSION_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>LOCATION_GAME.TEAM_PLAYER.TEAM_ID</code>.
     */
    public final TableField<TeamPlayerRecord, Integer> TEAM_ID = createField("TEAM_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>LOCATION_GAME.TEAM_PLAYER</code> table reference
     */
    public TeamPlayer() {
        this("TEAM_PLAYER", null);
    }

    /**
     * Create an aliased <code>LOCATION_GAME.TEAM_PLAYER</code> table reference
     */
    public TeamPlayer(String alias) {
        this(alias, TEAM_PLAYER);
    }

    private TeamPlayer(String alias, Table<TeamPlayerRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeamPlayer(String alias, Table<TeamPlayerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return LocationGame.LOCATION_GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TeamPlayerRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_C53;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TeamPlayerRecord>> getKeys() {
        return Arrays.<UniqueKey<TeamPlayerRecord>>asList(Keys.CONSTRAINT_C53);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TeamPlayerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TeamPlayerRecord, ?>>asList(Keys.CONSTRAINT_C, Keys.CONSTRAINT_C5);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeamPlayer as(String alias) {
        return new TeamPlayer(alias, this);
    }

    /**
     * Rename this table
     */
    public TeamPlayer rename(String name) {
        return new TeamPlayer(name, null);
    }
}
