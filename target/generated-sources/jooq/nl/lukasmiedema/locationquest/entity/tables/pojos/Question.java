/**
 * This class is generated by jOOQ
 */
package nl.lukasmiedema.locationquest.entity.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "QUESTION", schema = "LOCATION_GAME")
public class Question implements Serializable {

    private static final long serialVersionUID = -1657686495;

    private Integer questionId;
    private Integer gameId;
    private String  title;
    private String  text;
    private Boolean mainTrack;
    private UUID    qrCode;
    private String  puzzleText;

    public Question() {}

    public Question(Question value) {
        this.questionId = value.questionId;
        this.gameId = value.gameId;
        this.title = value.title;
        this.text = value.text;
        this.mainTrack = value.mainTrack;
        this.qrCode = value.qrCode;
        this.puzzleText = value.puzzleText;
    }

    public Question(
        Integer questionId,
        Integer gameId,
        String  title,
        String  text,
        Boolean mainTrack,
        UUID    qrCode,
        String  puzzleText
    ) {
        this.questionId = questionId;
        this.gameId = gameId;
        this.title = title;
        this.text = text;
        this.mainTrack = mainTrack;
        this.qrCode = qrCode;
        this.puzzleText = puzzleText;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "QUESTION_ID", unique = true, nullable = false, precision = 10)
    public Integer getQuestionId() {
        return this.questionId;
    }

    public Question setQuestionId(Integer questionId) {
        this.questionId = questionId;
        return this;
    }

    @Column(name = "GAME_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getGameId() {
        return this.gameId;
    }

    public Question setGameId(Integer gameId) {
        this.gameId = gameId;
        return this;
    }

    @Column(name = "TITLE", nullable = false, length = 2147483647)
    @NotNull
    @Size(max = 2147483647)
    public String getTitle() {
        return this.title;
    }

    public Question setTitle(String title) {
        this.title = title;
        return this;
    }

    @Column(name = "TEXT", nullable = false, length = 2147483647)
    @NotNull
    @Size(max = 2147483647)
    public String getText() {
        return this.text;
    }

    public Question setText(String text) {
        this.text = text;
        return this;
    }

    @Column(name = "MAIN_TRACK", nullable = false, precision = 1)
    public Boolean getMainTrack() {
        return this.mainTrack;
    }

    public Question setMainTrack(Boolean mainTrack) {
        this.mainTrack = mainTrack;
        return this;
    }

    @Column(name = "QR_CODE", precision = 2147483647)
    public UUID getQrCode() {
        return this.qrCode;
    }

    public Question setQrCode(UUID qrCode) {
        this.qrCode = qrCode;
        return this;
    }

    @Column(name = "PUZZLE_TEXT", length = 2147483647)
    @Size(max = 2147483647)
    public String getPuzzleText() {
        return this.puzzleText;
    }

    public Question setPuzzleText(String puzzleText) {
        this.puzzleText = puzzleText;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Question (");

        sb.append(questionId);
        sb.append(", ").append(gameId);
        sb.append(", ").append(title);
        sb.append(", ").append(text);
        sb.append(", ").append(mainTrack);
        sb.append(", ").append(qrCode);
        sb.append(", ").append(puzzleText);

        sb.append(")");
        return sb.toString();
    }
}
