/**
 * This class is generated by jOOQ
 */
package nl.lukasmiedema.locationquest.entity.tables;


import java.util.UUID;

import javax.annotation.Generated;

import nl.lukasmiedema.locationquest.entity.LocationGame;
import nl.lukasmiedema.locationquest.entity.tables.records.ImagesRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Images extends TableImpl<ImagesRecord> {

    private static final long serialVersionUID = 864249693;

    /**
     * The reference instance of <code>LOCATION_GAME.IMAGES</code>
     */
    public static final Images IMAGES = new Images();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImagesRecord> getRecordType() {
        return ImagesRecord.class;
    }

    /**
     * The column <code>LOCATION_GAME.IMAGES.IMAGE_ID</code>.
     */
    public final TableField<ImagesRecord, UUID> IMAGE_ID = createField("IMAGE_ID", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("RANDOM_UUID()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>LOCATION_GAME.IMAGES.IMAGE</code>.
     */
    public final TableField<ImagesRecord, byte[]> IMAGE = createField("IMAGE", org.jooq.impl.SQLDataType.VARBINARY.nullable(false), this, "");

    /**
     * Create a <code>LOCATION_GAME.IMAGES</code> table reference
     */
    public Images() {
        this("IMAGES", null);
    }

    /**
     * Create an aliased <code>LOCATION_GAME.IMAGES</code> table reference
     */
    public Images(String alias) {
        this(alias, IMAGES);
    }

    private Images(String alias, Table<ImagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Images(String alias, Table<ImagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return LocationGame.LOCATION_GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Images as(String alias) {
        return new Images(alias, this);
    }

    /**
     * Rename this table
     */
    public Images rename(String name) {
        return new Images(name, null);
    }
}
