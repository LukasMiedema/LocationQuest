/**
 * This class is generated by jOOQ
 */
package nl.lukasmiedema.locationquest.entity.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import nl.lukasmiedema.locationquest.entity.Keys;
import nl.lukasmiedema.locationquest.entity.LocationGame;
import nl.lukasmiedema.locationquest.entity.tables.records.QuestionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Question extends TableImpl<QuestionRecord> {

    private static final long serialVersionUID = 901708391;

    /**
     * The reference instance of <code>LOCATION_GAME.QUESTION</code>
     */
    public static final Question QUESTION = new Question();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuestionRecord> getRecordType() {
        return QuestionRecord.class;
    }

    /**
     * The column <code>LOCATION_GAME.QUESTION.QUESTION_ID</code>.
     */
    public final TableField<QuestionRecord, Integer> QUESTION_ID = createField("QUESTION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR LOCATION_GAME.SYSTEM_SEQUENCE_AFB26B5E_3A91_4921_A6CD_2180A8A93E59)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>LOCATION_GAME.QUESTION.GAME_ID</code>.
     */
    public final TableField<QuestionRecord, Integer> GAME_ID = createField("GAME_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LOCATION_GAME.QUESTION.TITLE</code>.
     */
    public final TableField<QuestionRecord, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647).nullable(false), this, "");

    /**
     * The column <code>LOCATION_GAME.QUESTION.TEXT</code>.
     */
    public final TableField<QuestionRecord, String> TEXT = createField("TEXT", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>LOCATION_GAME.QUESTION.MAIN_TRACK</code>.
     */
    public final TableField<QuestionRecord, Boolean> MAIN_TRACK = createField("MAIN_TRACK", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("TRUE", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>LOCATION_GAME.QUESTION.QR_CODE</code>.
     */
    public final TableField<QuestionRecord, UUID> QR_CODE = createField("QR_CODE", org.jooq.impl.SQLDataType.UUID.defaultValue(org.jooq.impl.DSL.field("RANDOM_UUID()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>LOCATION_GAME.QUESTION.PUZZLE_TEXT</code>.
     */
    public final TableField<QuestionRecord, String> PUZZLE_TEXT = createField("PUZZLE_TEXT", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>LOCATION_GAME.QUESTION</code> table reference
     */
    public Question() {
        this("QUESTION", null);
    }

    /**
     * Create an aliased <code>LOCATION_GAME.QUESTION</code> table reference
     */
    public Question(String alias) {
        this(alias, QUESTION);
    }

    private Question(String alias, Table<QuestionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Question(String alias, Table<QuestionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return LocationGame.LOCATION_GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QuestionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QUESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuestionRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_E;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuestionRecord>> getKeys() {
        return Arrays.<UniqueKey<QuestionRecord>>asList(Keys.CONSTRAINT_E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QuestionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QuestionRecord, ?>>asList(Keys.CONSTRAINT_E9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Question as(String alias) {
        return new Question(alias, this);
    }

    /**
     * Rename this table
     */
    public Question rename(String name) {
        return new Question(name, null);
    }
}
