/**
 * This class is generated by jOOQ
 */
package nl.lukasmiedema.locationquest.entity.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nl.lukasmiedema.locationquest.entity.Keys;
import nl.lukasmiedema.locationquest.entity.LocationGame;
import nl.lukasmiedema.locationquest.entity.tables.records.MultipleChoiceAnswerRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MultipleChoiceAnswer extends TableImpl<MultipleChoiceAnswerRecord> {

    private static final long serialVersionUID = 547358940;

    /**
     * The reference instance of <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER</code>
     */
    public static final MultipleChoiceAnswer MULTIPLE_CHOICE_ANSWER = new MultipleChoiceAnswer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MultipleChoiceAnswerRecord> getRecordType() {
        return MultipleChoiceAnswerRecord.class;
    }

    /**
     * The column <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.ANSWER_ID</code>.
     */
    public final TableField<MultipleChoiceAnswerRecord, Integer> ANSWER_ID = createField("ANSWER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR LOCATION_GAME.SYSTEM_SEQUENCE_61F0AB2E_181D_4A43_AE49_97E87A55181B)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.QUESTION_ID</code>.
     */
    public final TableField<MultipleChoiceAnswerRecord, Integer> QUESTION_ID = createField("QUESTION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.ANSWER_LABEL</code>.
     */
    public final TableField<MultipleChoiceAnswerRecord, String> ANSWER_LABEL = createField("ANSWER_LABEL", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.CORRECT</code>.
     */
    public final TableField<MultipleChoiceAnswerRecord, Boolean> CORRECT = createField("CORRECT", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER</code> table reference
     */
    public MultipleChoiceAnswer() {
        this("MULTIPLE_CHOICE_ANSWER", null);
    }

    /**
     * Create an aliased <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER</code> table reference
     */
    public MultipleChoiceAnswer(String alias) {
        this(alias, MULTIPLE_CHOICE_ANSWER);
    }

    private MultipleChoiceAnswer(String alias, Table<MultipleChoiceAnswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private MultipleChoiceAnswer(String alias, Table<MultipleChoiceAnswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return LocationGame.LOCATION_GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MultipleChoiceAnswerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MULTIPLE_CHOICE_ANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MultipleChoiceAnswerRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MultipleChoiceAnswerRecord>> getKeys() {
        return Arrays.<UniqueKey<MultipleChoiceAnswerRecord>>asList(Keys.CONSTRAINT_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MultipleChoiceAnswerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MultipleChoiceAnswerRecord, ?>>asList(Keys.CONSTRAINT_3C);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MultipleChoiceAnswer as(String alias) {
        return new MultipleChoiceAnswer(alias, this);
    }

    /**
     * Rename this table
     */
    public MultipleChoiceAnswer rename(String name) {
        return new MultipleChoiceAnswer(name, null);
    }
}
