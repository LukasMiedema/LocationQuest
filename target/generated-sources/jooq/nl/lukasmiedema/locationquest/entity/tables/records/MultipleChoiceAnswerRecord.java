/**
 * This class is generated by jOOQ
 */
package nl.lukasmiedema.locationquest.entity.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import nl.lukasmiedema.locationquest.entity.tables.MultipleChoiceAnswer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "MULTIPLE_CHOICE_ANSWER", schema = "LOCATION_GAME")
public class MultipleChoiceAnswerRecord extends UpdatableRecordImpl<MultipleChoiceAnswerRecord> implements Record4<Integer, Integer, String, Boolean> {

    private static final long serialVersionUID = 25723961;

    /**
     * Setter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.ANSWER_ID</code>.
     */
    public MultipleChoiceAnswerRecord setAnswerId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.ANSWER_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ANSWER_ID", unique = true, nullable = false, precision = 10)
    public Integer getAnswerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.QUESTION_ID</code>.
     */
    public MultipleChoiceAnswerRecord setQuestionId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.QUESTION_ID</code>.
     */
    @Column(name = "QUESTION_ID", nullable = false, precision = 10)
    @NotNull
    public Integer getQuestionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.ANSWER_LABEL</code>.
     */
    public MultipleChoiceAnswerRecord setAnswerLabel(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.ANSWER_LABEL</code>.
     */
    @Column(name = "ANSWER_LABEL", nullable = false, length = 2147483647)
    @NotNull
    @Size(max = 2147483647)
    public String getAnswerLabel() {
        return (String) get(2);
    }

    /**
     * Setter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.CORRECT</code>.
     */
    public MultipleChoiceAnswerRecord setCorrect(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>LOCATION_GAME.MULTIPLE_CHOICE_ANSWER.CORRECT</code>.
     */
    @Column(name = "CORRECT", nullable = false, precision = 1)
    @NotNull
    public Boolean getCorrect() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return MultipleChoiceAnswer.MULTIPLE_CHOICE_ANSWER.ANSWER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return MultipleChoiceAnswer.MULTIPLE_CHOICE_ANSWER.QUESTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MultipleChoiceAnswer.MULTIPLE_CHOICE_ANSWER.ANSWER_LABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return MultipleChoiceAnswer.MULTIPLE_CHOICE_ANSWER.CORRECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAnswerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getQuestionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAnswerLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getCorrect();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MultipleChoiceAnswerRecord value1(Integer value) {
        setAnswerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MultipleChoiceAnswerRecord value2(Integer value) {
        setQuestionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MultipleChoiceAnswerRecord value3(String value) {
        setAnswerLabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MultipleChoiceAnswerRecord value4(Boolean value) {
        setCorrect(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MultipleChoiceAnswerRecord values(Integer value1, Integer value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MultipleChoiceAnswerRecord
     */
    public MultipleChoiceAnswerRecord() {
        super(MultipleChoiceAnswer.MULTIPLE_CHOICE_ANSWER);
    }

    /**
     * Create a detached, initialised MultipleChoiceAnswerRecord
     */
    public MultipleChoiceAnswerRecord(Integer answerId, Integer questionId, String answerLabel, Boolean correct) {
        super(MultipleChoiceAnswer.MULTIPLE_CHOICE_ANSWER);

        set(0, answerId);
        set(1, questionId);
        set(2, answerLabel);
        set(3, correct);
    }
}
