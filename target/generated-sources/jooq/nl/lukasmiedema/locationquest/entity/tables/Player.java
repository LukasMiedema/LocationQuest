/**
 * This class is generated by jOOQ
 */
package nl.lukasmiedema.locationquest.entity.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import nl.lukasmiedema.locationquest.entity.Keys;
import nl.lukasmiedema.locationquest.entity.LocationGame;
import nl.lukasmiedema.locationquest.entity.tables.records.PlayerRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Player extends TableImpl<PlayerRecord> {

    private static final long serialVersionUID = 1671159663;

    /**
     * The reference instance of <code>LOCATION_GAME.PLAYER</code>
     */
    public static final Player PLAYER = new Player();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlayerRecord> getRecordType() {
        return PlayerRecord.class;
    }

    /**
     * The column <code>LOCATION_GAME.PLAYER.SESSION_ID</code>.
     */
    public final TableField<PlayerRecord, UUID> SESSION_ID = createField("SESSION_ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>LOCATION_GAME.PLAYER.NAME</code>.
     */
    public final TableField<PlayerRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>LOCATION_GAME.PLAYER</code> table reference
     */
    public Player() {
        this("PLAYER", null);
    }

    /**
     * Create an aliased <code>LOCATION_GAME.PLAYER</code> table reference
     */
    public Player(String alias) {
        this(alias, PLAYER);
    }

    private Player(String alias, Table<PlayerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Player(String alias, Table<PlayerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return LocationGame.LOCATION_GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlayerRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_8;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlayerRecord>> getKeys() {
        return Arrays.<UniqueKey<PlayerRecord>>asList(Keys.CONSTRAINT_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Player as(String alias) {
        return new Player(alias, this);
    }

    /**
     * Rename this table
     */
    public Player rename(String name) {
        return new Player(name, null);
    }
}
